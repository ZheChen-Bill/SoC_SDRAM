
Memory Configuration

Name             Origin             Length             Attributes
vexriscv_debug   0x00000000f00f0000 0x0000000000000100
dff              0x0000000000000000 0x0000000000000400
dff2             0x0000000000000400 0x0000000000000200
flash            0x0000000010000000 0x0000000001000000
mprj             0x0000000030000000 0x0000000000100000
mprjram          0x0000000038000000 0x0000000000004000
inputdata        0x0000000038004000 0x0000000000002000
outputdata       0x0000000038006000 0x0000000000002000
hk               0x0000000026000000 0x0000000000100000
csr              0x00000000f0000000 0x0000000000010000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000000000                __DYNAMIC = 0x0

.text           0x0000000010000000      0x6ec
                0x0000000010000000                _ftext = .
 *crt0*(.text)
 .text          0x0000000010000000      0x1a4 counter_la.elf-crt0_vex.o
                0x0000000010000000                _start
                0x0000000010000020                trap_entry
 *crt0*(.text)
 *(.text.isr)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000100001a4       0xb4 counter_la.elf-isr.o
                0x0000000010000204                isr
 .text          0x0000000010000258        0x0 counter_la.elf-adder.o
 .text          0x0000000010000258      0x494 counter_la.elf-counter_la.o
                0x0000000010000290                putchar
                0x00000000100002f8                print
                0x000000001000034c                main
                0x00000000100006ec                _etext = .

.rela.dyn       0x00000000100006ec        0x0
 .rela.text     0x00000000100006ec        0x0 counter_la.elf-crt0_vex.o

.rodata         0x00000000100006ec        0x4
                0x00000000100006f0                . = ALIGN (0x8)
 *fill*         0x00000000100006ec        0x4 
                0x00000000100006f0                _frodata = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 *(.rodata1)
                0x00000000100006f0                . = ALIGN (0x8)
                0x00000000100006f0                _erodata = .

.data           0x0000000000000000        0x0 load address 0x00000000100006f0
                0x0000000000000000                . = ALIGN (0x8)
                0x0000000000000000                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000000000        0x0 counter_la.elf-crt0_vex.o
 .data          0x0000000000000000        0x0 counter_la.elf-isr.o
 .data          0x0000000000000000        0x0 counter_la.elf-adder.o
 .data          0x0000000000000000        0x0 counter_la.elf-counter_la.o
 *(.data1)
                0x0000000000000000                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x0000000000000000                . = ALIGN (0x8)
                0x0000000000000000                _edata = .

.bss            0x0000000000000000        0x8 load address 0x00000000100006f0
                0x0000000000000000                . = ALIGN (0x8)
                0x0000000000000000                _fbss = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 .sbss          0x0000000000000000        0x2 counter_la.elf-isr.o
                0x0000000000000000                flag
 *(.scommon)
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000000002        0x0 counter_la.elf-crt0_vex.o
 .bss           0x0000000000000002        0x0 counter_la.elf-isr.o
 .bss           0x0000000000000002        0x0 counter_la.elf-adder.o
 .bss           0x0000000000000002        0x0 counter_la.elf-counter_la.o
 *(COMMON)
                0x0000000000000008                . = ALIGN (0x8)
 *fill*         0x0000000000000002        0x6 
                0x0000000000000008                _ebss = .
                0x0000000000000008                _end = .

.mprjram        0x0000000038000000       0x68 load address 0x00000000100006f0
                0x0000000038000000                . = ALIGN (0x8)
                0x0000000038000000                _fsram = .
 .mprjram       0x0000000038000000       0x68 counter_la.elf-adder.o
                0x0000000038000000                adder

.inputdata      0x0000000038004000       0x28 load address 0x0000000010000758
                0x0000000038004000                . = ALIGN (0x8)
                0x0000000038004000                _finputdata = .
 .inputdata     0x0000000038004000       0x28 counter_la.elf-adder.o
                0x0000000038004000                Number

.outputdata     0x0000000038006000        0x0 load address 0x0000000010000780
                0x0000000038006000                . = ALIGN (0x8)
                0x0000000038006000                _foutputdata = .
                0x0000000000000600                PROVIDE (_fstack = (ORIGIN (dff2) + LENGTH (dff2)))
                0x00000000100006f0                PROVIDE (_fdata_rom = LOADADDR (.data))
                [!provide]                        PROVIDE (_edata_rom = (LOADADDR (.data) + SIZEOF (.data)))
                0x0000000038000068                PROVIDE (_esram = (ORIGIN (mprjram) + SIZEOF (.mprjram)))
                0x00000000100006f0                PROVIDE (_esram_rom = LOADADDR (.mprjram))
                0x0000000038004028                PROVIDE (_einputdata = (ORIGIN (inputdata) + SIZEOF (.inputdata)))
                0x0000000010000758                PROVIDE (_einputdata_rom = LOADADDR (.inputdata))
                0x0000000038006000                PROVIDE (_eoutputdata = (ORIGIN (outputdata) + SIZEOF (.outputdata)))
                0x0000000010000780                PROVIDE (_eoutputdata_rom = LOADADDR (.outputdata))
LOAD counter_la.elf-crt0_vex.o
LOAD counter_la.elf-isr.o
LOAD counter_la.elf-adder.o
LOAD counter_la.elf-counter_la.o
OUTPUT(counter_la.elf elf32-littleriscv)

.riscv.attributes
                0x0000000000000000       0x20
 .riscv.attributes
                0x0000000000000000       0x1e counter_la.elf-crt0_vex.o
 .riscv.attributes
                0x000000000000001e       0x20 counter_la.elf-isr.o
 .riscv.attributes
                0x000000000000003e       0x1c counter_la.elf-adder.o
 .riscv.attributes
                0x000000000000005a       0x1c counter_la.elf-counter_la.o

.comment        0x0000000000000000       0x1b
 .comment       0x0000000000000000       0x1b counter_la.elf-isr.o
                                         0x1c (size before relaxing)
 .comment       0x000000000000001b       0x1c counter_la.elf-adder.o
 .comment       0x000000000000001b       0x1c counter_la.elf-counter_la.o

.debug_line     0x0000000000000000      0x817
 .debug_line    0x0000000000000000      0x270 counter_la.elf-crt0_vex.o
 .debug_line    0x0000000000000270       0xd1 counter_la.elf-isr.o
 .debug_line    0x0000000000000341       0xa7 counter_la.elf-adder.o
 .debug_line    0x00000000000003e8      0x42f counter_la.elf-counter_la.o

.debug_line_str
                0x0000000000000000       0xef
 .debug_line_str
                0x0000000000000000       0x51 counter_la.elf-crt0_vex.o
 .debug_line_str
                0x0000000000000051       0x6b counter_la.elf-isr.o
                                         0xf4 (size before relaxing)
 .debug_line_str
                0x00000000000000bc       0x1f counter_la.elf-adder.o
                                         0xac (size before relaxing)
 .debug_line_str
                0x00000000000000db       0x14 counter_la.elf-counter_la.o
                                         0xf7 (size before relaxing)

.debug_info     0x0000000000000000      0x2dc
 .debug_info    0x0000000000000000       0x25 counter_la.elf-crt0_vex.o
 .debug_info    0x0000000000000025       0xed counter_la.elf-isr.o
 .debug_info    0x0000000000000112       0xaa counter_la.elf-adder.o
 .debug_info    0x00000000000001bc      0x120 counter_la.elf-counter_la.o

.debug_abbrev   0x0000000000000000      0x229
 .debug_abbrev  0x0000000000000000       0x14 counter_la.elf-crt0_vex.o
 .debug_abbrev  0x0000000000000014       0xa9 counter_la.elf-isr.o
 .debug_abbrev  0x00000000000000bd       0x99 counter_la.elf-adder.o
 .debug_abbrev  0x0000000000000156       0xd3 counter_la.elf-counter_la.o

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 counter_la.elf-crt0_vex.o
 .debug_aranges
                0x0000000000000020       0x20 counter_la.elf-isr.o
 .debug_aranges
                0x0000000000000040       0x20 counter_la.elf-adder.o
 .debug_aranges
                0x0000000000000060       0x20 counter_la.elf-counter_la.o

.debug_str      0x0000000000000000      0x179
 .debug_str     0x0000000000000000       0x5d counter_la.elf-crt0_vex.o
 .debug_str     0x000000000000005d       0xec counter_la.elf-isr.o
                                        0x125 (size before relaxing)
 .debug_str     0x0000000000000149       0x1d counter_la.elf-adder.o
                                         0x81 (size before relaxing)
 .debug_str     0x0000000000000166       0x13 counter_la.elf-counter_la.o
                                        0x124 (size before relaxing)

.debug_frame    0x0000000000000000      0x1a8
 .debug_frame   0x0000000000000000       0xa4 counter_la.elf-isr.o
 .debug_frame   0x00000000000000a4       0x34 counter_la.elf-adder.o
 .debug_frame   0x00000000000000d8       0xd0 counter_la.elf-counter_la.o

.debug_rnglists
                0x0000000000000000       0x16
 .debug_rnglists
                0x0000000000000000       0x16 counter_la.elf-adder.o
